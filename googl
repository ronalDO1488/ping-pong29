
from pygame import *
from random import randint

class GameSprite(sprite.Sprite):
    def __init__(self, player_image, player_x, player_y, height, width, player_speed):
        super().__init__()
        self.image = transform.scale(image.load(player_image), (width, height))
        self.speed = player_speed
        self.rect = self.image.get_rect()
        self.rect.x = player_x
        self.rect.y = player_y
        

    def reset(self):
        window.blit(self.image, (self.rect.x , self.rect.y))

class Player(GameSprite):
    def update_l(self):
        keys_pressed = key.get_pressed()
        if keys_pressed[K_w] and self.rect.y > 5:
            self.rect.y -= self.speed
        if keys_pressed[K_s] and self.rect.y < win_height - 80:
            self.rect.y += self.speed

    def update_r(self):
        keys_pressed = key.get_pressed()
        if keys_pressed[K_UP] and self.rect.y > 5:
            self.rect.y -= self.speed
        if keys_pressed[K_DOWN] and self.rect.y < win_height - 80:
            self.rect.y += self.speed

        

back = (200, 255, 255)
win_width = 700
win_height = 500
window = display.set_mode((win_width, win_height))
display.set_caption('Пинг-понг')
window.fill(back)

#player = Player('asteroid.png', 5, win_height - 80, 4) 
#ball = Gamer('rocket.png', win_width - 80, 280, 2)

game = True
finish = False
clock = time.Clock()
FPS = 60
speed = 10

racket1 = Player("treasure.png", 30, 200, 4, 50, 150)
racket2 = Player("treasure.png", 520, 200, 4, 50, 150)
ball = GameSprite("cyborg.png", 200, 200, 4, 50, 50) 

font.init()
font = font.Font(None, 35)
lose1 = font.render('PLAYER 1 LOSE!', True, (180, 0, 0))
lose2 = font.render('PLAYER 2 LOSE!', True, (180, 0, 0))



while game:
    for e in event.get():
        if e.type == QUIT:
            game = False  
    if finish != True:
        #window.blit(background, (0, 0))
        racket1.update_r()
        racket2.update_l()
        #ball.rect.x += rect.x
        #ball.rect.y += rect.y
        racket1.reset()
        racket2.reset()
        ball.reset()

    #if 
        #finish = True
    display.update()
    clock.tick(FPS)



